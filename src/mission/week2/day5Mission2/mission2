문제

**문제설명:**

1. 아래 코드는 클라이언트(Client)와 서버(Server) 간의 통신을 구현하는 Java 코드입니다.
2. 클라이언트는 사용자로부터 유저명과 권한을 입력받고, 이를 서버로 전송합니다.
3. 서버는 클라이언트로부터 전송된 UserDTO를 받아 User 객체로 변환하고,
이를 userList에 등록합니다.
4. 클라이언트에게 응답을 전송합니다.

**Base code**

[**AdminUser]**

//TODO: AdminUser 클래스 정의
class AdminUser extends User {
}

[**Client]**

import [java.io](http://java.io/).*;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

//TODO: 구현이 될 된 클라이언트 클래스 정의
class Client {

public static void main(String[] args){

    // 1. 유저 정보 입력 받습니다.
    Scanner reader = new Scanner(System.in);
    System.out.print("유저명을 입력하세요: ");
    String username = reader.next();
    System.out.print("권한을 입력하세요 (admin 또는 user): ");
    String role = reader.next();

    // 2. 서버에 연결
    try(Socket socket = new Socket("localhost", 1234)){ // 서버연결
        System.out.println("서버에 연결되었습니다.");

        // TODO: 서버로 데이터를 보내기 위한 ObjectOutputStream 생성

        // TODO: 서버로부터 데이터를 받기 위한 InputStream 생성

        // TODO: UserDTO 생성 및 전송

        // TODO 서버에 메시지 전송

        // TODO: 서버로부터 받은 응답 출력
        String response = null;

        System.out.println("서버의 응답: " + response);
        System.out.println("Client가 종료되었습니다.");

    } catch (UnknownHostException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
}

[**Server]**

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

// 서버 클래스 정의
class Server {

public static void main(String[] args) {

    // 유저 대기리스트
    List<User> userList = new ArrayList<>();

    // 1. 서버 소켓 생성
    try(ServerSocket serverSocket = new ServerSocket(1234)){
        System.out.println("서버가 시작되었습니다.");

        while(true) {
            // TODO: 유저 Server 연결 필요합니다.
            try (Socket clientSocket = serverSocket.accept()) {
                System.out.println("클라이언트가 연결되었습니다.");

                // TODO: 클라이언트로부터 전송된 UserDTO 수신

                // TODO: UserDTO를 User 객체로 변환

                // TODO: 유저등록
                System.out.println("새로운 유저가 등록되었습니다. " + userList);

                // TODO: Client로 출력한 PrintWriter를 이용한 ServerOutputStream 출력

                // TODO: Client 에 응답 출력

            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
}

[**User]**

//TODO: User 클래스 정의
class User {
}

[**UserDTO]**

import java.io.Serializable;

// TODO: UserDTO 클래스 정의
class UserDTO implements Serializable {
}

**[Server 클래스]**

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

// 서버 클래스 정의
class Server {

    public static void main(String[] args) {

        // 유저 대기리스트
        List<User> userList = new ArrayList<>();

        // 1. 서버 소켓 생성
        try(ServerSocket serverSocket = new ServerSocket(1234)){
            System.out.println("서버가 시작되었습니다.");

            while(true) {
                // TODO: 유저 Server 연결 필요합니다.
                try (Socket clientSocket = serverSocket.accept()) {
                    System.out.println("클라이언트가 연결되었습니다.");

                    // TODO: 클라이언트로부터 전송된 UserDTO 수신

                    // TODO: UserDTO를 User 객체로 변환

                    // TODO: 유저등록
                    System.out.println("새로운 유저가 등록되었습니다. " + userList);

                    // TODO: Client로 출력한 PrintWriter를 이용한 ServerOutputStream 출력

                    // TODO: Client 에 응답 출력

                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

**[Client code]**

import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

//TODO: 구현이 될 된 클라이언트 클래스 정의
class Client {

    public static void main(String[] args){

        // 1. 유저 정보 입력 받습니다.
        Scanner reader = new Scanner(System.in);
        System.out.print("유저명을 입력하세요: ");
        String username = reader.next();
        System.out.print("권한을 입력하세요 (admin 또는 user): ");
        String role = reader.next();

        // 2. 서버에 연결
        try(Socket socket = new Socket("localhost", 1234)){ // 서버연결
            System.out.println("서버에 연결되었습니다.");

            // TODO: 서버로 데이터를 보내기 위한 ObjectOutputStream 생성

            // TODO: 서버로부터 데이터를 받기 위한 InputStream 생성

            // TODO: UserDTO 생성 및 전송

            // TODO 서버에 메시지 전송

            // TODO: 서버로부터 받은 응답 출력
            String response = null;

            System.out.println("서버의 응답: " + response);
            System.out.println("Client가 종료되었습니다.");

        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

**[User Class]**

//TODO: User 클래스 정의
class User {
}

//TODO: AdminUser 클래스 정의
class AdminUser extends User {
}

// TODO: UserDTO 클래스 정의
class UserDTO implements Serializable {
}

TIP :

1. Server 클래스의 구현 부분 힌트
- 클라이언트로부터 전송된 UserDTO를 수신하기 위해 InputStream을 사용합니다.
- UserDTO를 User 객체로 변환하여 userList에 추가합니다.
- 클라이언트에게 응답을 전송하기 위해 PrintWriter를 사용합니다.
- User 객체를 클라이언트로 출력한 뒤, 응답을 출력합니다.
1. Client 클래스의 구현 부분 힌트
- 서버로 데이터를 보내기 위해 ObjectOutputStream을 생성합니다.
- 서버로부터 응답을 받기 위해 InputStream을 생성합니다.
- 사용자로부터 입력받은 유저명과 권한으로 UserDTO 객체를 생성하여 서버로 전송합니다.
- 서버로 메시지를 전송한 뒤, 서버로부터 받은 응답을 출력합니다.