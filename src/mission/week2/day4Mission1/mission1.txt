[질문]

문제: 사칙연산 계산기 만들기

사용자로부터 두 개의 숫자와 연산자를 입력받아서 사칙연산을 수행하는 계산기를 만들려고 합니다. 다음과 같은 조건을 만족하도록 프로그램을 작성해보세요.
숫자1, 숫자2, 연산자('+', '-', '*', '/')를 변수에 저장합니다.
입력받은 연산자에 따라 두 숫자를 계산하여 결과를 출력합니다.
숫자1과 숫자2는 정수로 입력받습니다.
숫자2가 0인 경우에는 '/' 연산을 수행할 수 없으므로 "0으로 나눌 수 없습니다."라는 메시지를 출력하고 프로그램을 종료합니다.
계산 중 발생하는 예외를 적절한 Custom Exception으로 처리하고 예외 메시지를 출력합니다.
아래 Custom Exception도 정의해야합니다.
DivideByZeroException: 숫자2가 0인 경우 발생하는 예외입니다.
InvalidOperatorException: 유효하지 않은 연산자가 입력된 경우 발생하는 예외입니다.

[Base code]

// DivideByZeroException 클래스 정의

// InvalidOperatorException 클래스 정의

public class Calculator {
    public static void main(String[] args) {
        // 변수 선언 및 초기화

        try {
            // 숫자1 입력

            // 숫자2 입력

            // 연산자 입력

            // calculate 메소드 호출

            // 결과 출력

        } catch (DivideByZeroException e) {
            System.out.println(e.getMessage());
        } catch (InvalidOperatorException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println("예상치 못한 오류가 발생했습니다.");
        }
    }

    public static int calculate(int num1, int num2, char operator) throws DivideByZeroException, InvalidOperatorException {
        // 사칙연산 수행 및 예외 처리
    }
}



TIP :

calculate 메소드에서 숫자2가 0인 경우와 유효하지 않은 연산자인 경우에 예외를 던지는 방법을 생각해보세요.
예외 클래스를 정의할 때, 예외 메시지를 전달할 수 있는 생성자를 만들어 사용하세요.
예외가 발생한 경우에는 해당 예외에 대한 처리를 main 메소드에서 수행하도록 합니다. 각 예외에 대한 처리를 별도의 catch 블록에서 수행합니다.
DivideByZeroException과 InvalidOperatorException은 RuntimeException 클래스를 상속받아서 정의합니다.